name: Reusable Workflow

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      current_time:
        required: true
        type: string
    secrets:
      ENVIRONMENTS_SECRET_1:
        required: true
      ENVIRONMENTS_VARIABLE_1:
        required: true
      REPOSITORY_SECRETS_1:
        required: true

jobs:
  get_dir:
    runs-on: ubuntu-latest
    outputs:
      song_prefix: ${{ steps.my_s_id.outputs.song_prefix }}
    steps:
      - id: my_s_id
        run: |
          if [[ "${{ inputs.env }}" != "prd" ]]; then
            echo "song_prefix=${{ inputs.env }}/" >> "$GITHUB_OUTPUT"
          fi
  process:
    runs-on: ubuntu-latest
    needs:
      - get_dir
    environment: prd
    timeout-minutes: 5
    strategy:
      matrix:
        include:
          - song: jaz
            my_path:
              - from: "dist"
                to: ${{ needs.get_dir.outputs.song_prefix }}sub_dir
                # to: ${{ inputs.env != 'prd' && format('{0}/', inputs.env) || '' }}sub_dir
                # to: ${{ format('{0}', inputs.env == 'prd' && '' || inputs.env) }}sub_dir
    steps:
      - name: echo secrets
        run: |
          echo ${{ secrets.ENVIRONMENTS_SECRET_1 }}
          echo ${{ secrets.ENVIRONMENTS_VARIABLE_1 }}
          echo ${{ secrets.REPOSITORY_SECRETS_1 }}
          echo ${{ inputs.env }}
          echo ${{ inputs.current_time }}
      - name: matrix prcess
        if: matrix.my_path
        run: |
          jq -c '.[]' <<< '${{ toJSON(matrix.my_path) }}' | while read -r path; do
            from=$(echo $path | jq -r '.from')
            to=$(echo $path | jq -r '.to')
            echo ${{ matrix.song }}/${from}/xxx/${to}
          done
      - name: finish
        run: echo 'finish!'
